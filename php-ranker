#!/usr/bin/env php
<?php

require __DIR__ . "/vendor/autoload.php";

/**
 * 處理設定檔
 */
$includes = [];
$excludes = [];
$vendor   = realpath(__DIR__ . "/../../../");
$dirname  = basename($vendor) === "vendor" ? realpath("{$vendor}/../") : getcwd();
$config   = "{$dirname}/.php-ranker";
if (file_exists($config) && $config = json_decode(file_get_contents($config))) {
    isset($config->includes) ?: $config->includes = $includes;
    isset($config->excludes) ?: $config->excludes = $excludes;
    $includes = $config->includes;
    $excludes = $config->excludes;
}

$totalLoc     = 0;
$reportRanks  = [];
$reportLOC    = [];
$reportFiles  = [];
$reportScores = [];
$default      = [
    "pmd-report"        => "pmd-warnings.xml",
    "dry-report"        => "dry-warnings.xml",
    "checkstyle-report" => "checkstyle-warnings.xml",
    "export-dir"        => getcwd(),
];
$opt          = getopt(null, opt_key($default));
$opt          = array_merge($default, $opt);
$checkstyle   = $opt["checkstyle-report"];
$pmd          = $opt["pmd-report"];
$dry          = $opt["dry-report"];
$export       = $opt["export-dir"];
$pmdScores    = (new PHPRanker\PMD\Parser($pmd))->parse()->getScore();
$styleScores  = (new PHPRanker\Checkstyle\Parser($checkstyle))->parse()->getScore();
$dryScores    = (new PHPRanker\Dry\Parser($dry))->parse()->getScore();
foreach ($includes as $include) {
    $path  = "{$dirname}/{$include}";
    $files = is_dir($path) ? glob_recursive("{$path}/*.php") : [$path];
    foreach ($files as $file) {
        if (is_excluded($file, $excludes)) {
            continue;
        }

        isset($pmdScores[$file]) ?: $pmdScores[$file] = 0;
        isset($dryScores[$file]) ?: $dryScores[$file] = 0;
        isset($styleScores[$file]) ?: $styleScores[$file] = 0;

        /**
         * 處理rank資料(phpmd+phpcpd+phpcs)
         */
        $reportPoints = $pmdScores[$file] + $dryScores[$file] + $styleScores[$file];
        $reportGrade  = (new PHPRanker\Grade($reportPoints));

        /**
         * LOC counting
         */
        $fileLoc   = loc($file);
        $totalLoc += $fileLoc;

        /**
         * 去除多餘的資料夾名稱
         */
        $file = realpath($file);
        $file = str_replace("{$dirname}/", "", $file);

        /**
         * 處理顯示的報告資料
         */
        $rank  = $reportGrade->getRank();
        $point = $reportGrade->getPoint();

        /**
         * 處理得點
         */
        $reportFiles[$file]  = $point;
        $reportScores[$file] = $point * $fileLoc;

        /**
         * 處理得點次數
         */
        isset($reportRanks[$rank]) ?: $reportRanks[$rank] = 0;
        $reportRanks[$rank] += 1;

        /**
         * 報告顯示
         */
        $reportLOC[$file] = $fileLoc;
    }
}

/**
 * 處理dount chart
 */
$defaultColor  = [
    "A" => "#5EB34B",
    "B" => "#8CBF48",
    "C" => "#F4E839",
    "D" => "#F2AB46",
    "F" => "#E92C2F"
];
$reportColor   = [];
$reportChart   = [];
$reportChart[] = ["rank", "count"];
foreach ($reportRanks as $rank => $count) {
    $reportChart[] = [$rank, $count];
    $reportColor[] = $defaultColor[$rank];
}

/**
 * 處理靜態檔案
 */
$sumScore = array_sum($reportScores);
$sumCount = $totalLoc;
$sumGPA   = $sumCount ? $sumScore / $sumCount : 0;
$sumGPA   = floor($sumGPA * 100) / 100;
$template = __DIR__ . "/template/php-ranker.html";
ob_start();
include $template;
$content = ob_get_contents();
ob_end_clean();
$template = basename($template);
file_put_contents("{$export}/{$template}", $content);
